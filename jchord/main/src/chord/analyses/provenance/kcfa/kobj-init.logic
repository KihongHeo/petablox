// Created by convert.py from ./src/chord/analyses/provenance/kcfa/kobj-init.dlog on 2015-04-20 13:08:42.271421
// # Copyright (c) 2008-2010, Intel Corporation.
// # Copyright (c) 2006-2007, The Trustees of Stanford University.
// # All rights reserved.
// # Licensed under the terms of the New BSD License.

// # Author: Mayur Naik (mhn@cs.stanford.edu)
// :name: kobj-init-dlog

// :domains: I
// :domains: M
// :domains: K
// :domains: C
// :domains: H
// :domains: V


// ###
// # Relations
// ###

// :inputs: initCHC(C,H,C)
// :inputs: truncCKC(C,K,C)
// :inputs: HK(H,K)
// :inputs: roots(M)
// :inputs: IM(I,M)
// :inputs: VH(V,H)
// :inputs: MI(M,I)
// :inputs: MH(M,H)
// :inputs: IinvkArg0(I0,V1)
// :inputs: statM(M)

// :inputs: thisMV(M,V)
// convert.py: following intermediate relation converted to output relation
// :outputs: HM(H,M)
HM(h,m) -> H(h), M(m).
// convert.py: following intermediate relation converted to output relation
// :outputs: CM_1(C,M)
CM_1(c,m) -> C(c), M(m).
// convert.py: following intermediate relation converted to output relation
// :outputs: CHC_1(C,H,C)
CHC_1(c,h,c1) -> C(c), H(h), C(c1).
// convert.py: following intermediate relation converted to output relation
// :outputs: CHC_2(C,H,C)
CHC_2(c,h,c1) -> C(c), H(h), C(c1).
// convert.py: following intermediate relation converted to output relation
// :outputs: CHC_3(C,H,C)
CHC_3(c,h,c1) -> C(c), H(h), C(c1).

// :outputs: CM(C,M)
CM(c,m) -> C(c), M(m).
// :outputs: CHC(C,H,C)
CHC(c,h,c1) -> C(c), H(h), C(c1).

// ###
// # Constraints
// ###

HM(h,m) <- thisMV(m,v), VH(v,h).

// #initialize CM for root methods with emptycontext
//CM_1(0,m) <- roots(m).
CM_1(c0,m) <- roots(m), C_index[c0] = 0.
// #CM_1(c,m) :- CHC_1(_,h,c), IM(i,m), IinvkArg0(i,v), VH(v,h), !statM(m).
CM_1(c,m) <- CHC_1(_,h,c), HM(h,m).
CM_1(c,m1) <- CM_1(c,m0), IM(i,m1), statM(m1), MI(m0,i).

CHC_1(c1,h,c3) <- MH(m,h), CM_1(c1,m), HK(h,k), initCHC(c1,h,c2), truncCKC(c2,k,c3).
CHC_2(c1,h,c2) <- CHC_1(c1,h,c2), initCHC(c1,h,c2).
CHC_3(c1,h,c3) <- !CHC_2(c1,h,c3), CHC_1(c1,h,c3).

//CM(0,m) <- roots(m).
CM(c0,m) <- roots(m), C_index[c0] = 0.
// #CM(c,m) :- CHC(_,h,c), IM(i,m), IinvkArg0(i,v), VH(v,h), !statM(m).
CM(c,m) <- CHC(_,h,c), HM(h,m).
CM(c,m1) <- CM(c,m0), IM(i,m1), statM(m1), MI(m0,i).

CHC(c1,h,c3) <- CHC_2(c1,h,c3).
CHC(c1,h,c3) <- MH(m,h), CM(c1,m), HK(h,k), initCHC(c1,h,c2), truncCKC(c2,k,c3), CHC_3(c1,h,c3).
