// Created by convert.py from ./src/chord/analyses/provenance/kobj/kobj-bit-init.dlog on 2015-04-20 13:08:42.285885

// # Author: Xin Zhang
// :name: kobj-bit-init-dlog

// :domains: I
// :domains: M
// :domains: K
// :domains: C
// :domains: H
// :domains: V


// ###
// # Relations
// ###

// :inputs: initCOC(C,H,C)
// :inputs: initCHC(C,H,C)
// :inputs: truncCKC(C,K,C)
// :inputs: HK(H,K)
// :inputs: OK(H,K)
// :inputs: roots(M)
// :inputs: IM(I,M)
// :inputs: VH(V,H)
// :inputs: MI(M,I)
// :inputs: MH(M,H)
// :inputs: CL(C,K)
// :inputs: IinvkArg0(I0,V1)
// :inputs: statM(M)

// :inputs: AllowH(H,K)
// :inputs: DenyH(H,K)
// :inputs: AllowO(H,K)
// :inputs: DenyO(H,K)

// :inputs: thisMV(M,V)
// convert.py: following intermediate relation converted to output relation
// :outputs: HM(H,M)
HM(h,m) -> H(h), M(m).

// convert.py: following intermediate relation converted to output relation
// :outputs: CHC_1(C,H,C)
CHC_1(c,h,c1) -> C(c), H(h), C(c1).
// convert.py: following intermediate relation converted to output relation
// :outputs: CHC_2(C,H,C)
CHC_2(c,h,c1) -> C(c), H(h), C(c1).
// convert.py: following intermediate relation converted to output relation
// :outputs: COC_1(C,H,C)
COC_1(c,h,c1) -> C(c), H(h), C(c1).
// convert.py: following intermediate relation converted to output relation
// :outputs: COC_2(C,H,C)
COC_2(c,h,c1) -> C(c), H(h), C(c1).

// :outputs: CM(C,M)
CM(c,m) -> C(c), M(m).
// :outputs: CHC(C,H,C)
CHC(c,h,c1) -> C(c), H(h), C(c1).
// :outputs: COC(C,H,C)
COC(c,h,c1) -> C(c), H(h), C(c1).

// ###
// # Constraints
// ###

HM(h,m) <- thisMV(m,v), VH(v,h).

//CM(0,m) <- roots(m).
CM(c0,m) <- roots(m), C_index[c0] = 0.
// #CM(c,m) :- CHC(_,h,c), HM(h,m).
CM(c,m) <- COC(_,h,c), HM(h,m).
CM(c,m1) <- CM(c,m0), IM(i,m1), statM(m1), MI(m0,i).

//AllowH(_,0).
AllowH(h,k0) <- H(h), K_index[k0] = 0.

CHC_1(c1,h,c2) <- MH(m,h), CM(c1,m),initCHC(c1,h,c2).
CHC(c1,h,c2) <- CHC_1(c1,h,c2),CL(c2,l),AllowH(h,l).

CHC_2(c1,h,c3) <- CHC_1(c1,h,c2), CL(c2,l1), DenyH(h,l2), truncCKC(c2,l2,c3), l2 <= l1.
CHC(c1,h,c2) <- CHC_2(c1,h,c2), CL(c2,l), AllowH(h,l).


//AllowO(_,0).
AllowO(h,k0) <- H(h), K_index[k0] = 0.

COC_1(c1,h,c2) <- MH(m,h), CM(c1,m),initCOC(c1,h,c2).
COC(c1,h,c2) <- COC_1(c1,h,c2),CL(c2,l),AllowO(h,l).

COC_2(c1,h,c3) <- COC_1(c1,h,c2), CL(c2,l1), DenyO(h,l2), truncCKC(c2,l2,c3), l2 <= l1.
COC(c1,h,c2) <- COC_2(c1,h,c2), CL(c2,l), AllowO(h,l).
