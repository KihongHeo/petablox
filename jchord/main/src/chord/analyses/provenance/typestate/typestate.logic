// Created by convert.py from ./src/chord/analyses/provenance/typestate/typestate.dlog on 2015-04-20 13:08:42.315005
// # Author: Ravi Mangal, Xin Zhang
// :name: typestate-dlog

// :domains: I
// :domains: M
// :domains: P
// :domains: V
// :domains: Z
// :domains: H
// :domains: MS
// :domains: K
// :domains: F


// ###
// # Relations
// ###

// :inputs: PP(P,P)
// :inputs: PI(P,I)
// :inputs: IM(I,M)
// :inputs: PobjValAsgnInst(P,V,H)
// :inputs: PobjVarAsgnInst(P,V,V)
// :inputs: MPhead(M,P)
// :inputs: rootM(M)
// :inputs: PobjNullAsgnInst(P,V)
// :inputs: PgetInstFldInst(P,V,V,F)
// :inputs: PgetStatFldInst(P,V,F)
// :inputs: MmethArg(M,Z,V)
// :inputs: IinvkArg(I0,Z0,V1)
// :inputs: MP(M,P)
// :inputs: MPtail(M,P)
// :inputs: IinvkRet(I,Z,V)
// :inputs: MmethRet(M0,Z0,V1)
// :inputs: MZfirst(M,Z)
// :inputs: MZlast(M,Z)
// :inputs: MZZ(M,Z,Z)
// :inputs: MK(M,K)
// :inputs: gen(MS,V,MS)
// :inputs: kill(MS,V,MS)
// :inputs: contain(V,MS)
// :inputs: virtIM(I,M)
// :inputs: specIM(I,M)
// :inputs: PobjRetInst(P,V)
// :inputs: checkExcludedH(H)
// :inputs: checkExcludedI(I)
// :inputs: VH(V,H)
// :inputs: reachableM(M)
// :inputs: trackedH(H)

// :inputs: allow(V)
// :inputs: deny(V)

// :outputs: path(P,H,MS,H,MS,K)
path(p,h1,ms1,h2,ms2,k) -> P(p), H(h1), MS(ms1), H(h2), MS(ms2), K(k).
// :outputs: summary(M,H,MS,H,K)
summary(m,h,ms1,h2,k) -> M(m), H(h), MS(ms1), H(h2), K(k).
// :outputs: pathArg(P,Z,M,MS,MS)
pathArg(p,z,m,ms1,ms2) -> P(p), Z(z), M(m), MS(ms1), MS(ms2).
// #VVMZ(v:V,u:V,m:M,z:Z)
// #VVMZRet(v:V,u:V,m:M)
// convert.py: following intermediate relation converted to output relation
// :outputs: PInvkInst(P,M,V,V,Z)
PInvkInst(p,m,v,u,z) -> P(p), M(m), V(v), V(u), Z(z).
// convert.py: following intermediate relation converted to output relation
// :outputs: PInvkRetInst(P,M,V,V)
PInvkRetInst(p,m,v,u) -> P(p), M(m), V(v), V(u).
// convert.py: following intermediate relation converted to output relation
// :outputs: PInvkRetInstFilter(P,M)
PInvkRetInstFilter(p,m) -> P(p), M(m).
// convert.py: following intermediate relation converted to output relation
// :outputs: PInvkRetInstNotFilter(P,M)
PInvkRetInstNotFilter(p,m) -> P(p), M(m).
// :outputs: nonRelevantP(P)
nonRelevantP(p) -> P(p).
// :outputs: relevantP(P)
relevantP(p) -> P(p).
// convert.py: following intermediate relation converted to output relation
// :outputs: pathArgInit(P,MS,H)
pathArgInit(p,ms1,h) -> P(p), MS(ms1), H(h).
// convert.py: following intermediate relation converted to output relation
// :outputs: pathArgLast(P,M,MS,MS)
pathArgLast(p,m,ms1,ms2) -> P(p), M(m), MS(ms1), MS(ms2).
// convert.py: following intermediate relation converted to output relation
// :outputs: PInvkSkip(P)
PInvkSkip(p) -> P(p).
// convert.py: following intermediate relation converted to output relation
// :outputs: IMFilter(I)
IMFilter(i) -> I(i).

// :outputs: unprovenQuery(P,H)
unprovenQuery(p,h) -> P(p), H(h).


// ###
// # Constraints
// ###
// ## Assuming throughout that no instruction will be processed
// ## after a return instruction for any path edge.

// #VVMZ(v,u,m,z) :- IinvkArg(i,z,u), IM(i,m),  MmethArg(m,z,v).
// #VVMZRet(v,u,m) :- IinvkRet(i,z,v), IM(i,m),  MmethRet(m,z,u).
PInvkInst(p,m,v,u,z) <- PI(p,i), IM(i,m), IinvkArg(i,z,u), MmethArg(m,z,v).
PInvkRetInst(p,m,v,u) <- PI(p,i), IM(i,m), IinvkRet(i,z,v), MmethRet(m,z,u).
PInvkRetInstFilter(p,m) <- PInvkRetInst(p,m,_,_).
PInvkRetInstNotFilter(p,m) <- !PInvkRetInstFilter(p,m).
IMFilter(i) <- IM(i,_).
PInvkSkip(p) <- PI(p,i), !IMFilter(i).

// #path(p,0,0,0,0,0) :- rootM(m), MPhead(m,p).
// #path(p,0,0,0,0,0) :- path(q,0,0,0,0,0,0), PP(q,p).
// #path(p,0,0,0,0,0) :- reachableM(m), MP(m,p).
// #path(p,0,0,0,0,0) :- reachableM(m), MPtail(m,p).

//path(p,0,0,0,0,0) <- reachableM(m), MPhead(m,p).
path(p,h0,ms0,h0,ms0,k0) <- reachableM(m), MPhead(m,p), H_index[h0] = 0, MS_index[ms0] = 0, K_index[k0] = 0.

// ### v = new h
//path(p,0,0,h,ms,0) <- PobjValAsgnInst(p,v,h), PP(q,p), path(q,0,0,0,0,0), allow(v), gen(0,v,ms), trackedH(h).
//path(p,0,0,h,0,0) <- PobjValAsgnInst(p,v,h), PP(q,p), path(q,0,0,0,0,0), deny(v), trackedH(h).
//path(p,h1,ms1,h2,ms3,0) <- PobjValAsgnInst(p,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,0), contain(v,ms2), kill(ms2,v,ms3).
//path(p,h1,ms1,h2,ms2,0) <- PobjValAsgnInst(p,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,0), !contain(v,ms2).
path(p,h0,ms0,h,ms,k0) <- PobjValAsgnInst(p,v,h), PP(q,p), path(q,h0,ms0,h0,ms0,k0), allow(v), gen(k0,v,ms), trackedH(h), H_index[h0] = 0, MS_index[ms0] = 0, K_index[k0] = 0.
path(p,h0,ms0,h,ms0,k0) <- PobjValAsgnInst(p,v,h), PP(q,p), path(q,h0,ms0,h0,ms0,k0), deny(v), trackedH(h), H_index[h0] = 0, MS_index[ms0] = 0, K_index[k0] = 0.
path(p,h1,ms1,h2,ms3,k0) <- PobjValAsgnInst(p,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,k0), contain(v,ms2), kill(ms2,v,ms3), K_index[k0] = 0.
path(p,h1,ms1,h2,ms2,k0) <- PobjValAsgnInst(p,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,k0), !contain(v,ms2), K_index[k0] = 0.

// ### v = u
//path(p,h1,ms1,h2,ms3,0) <- PobjVarAsgnInst(p,v,u), PP(q,p), path(q,h1,ms1,h2,ms2,0), !contain(u,ms2), contain(v,ms2), kill(ms2,v,ms3).
path(p,h1,ms1,h2,ms3,k0) <- PobjVarAsgnInst(p,v,u), PP(q,p), path(q,h1,ms1,h2,ms2,k0), !contain(u,ms2), contain(v,ms2), kill(ms2,v,ms3), K_index[k0] = 0.
//path(p,h1,ms1,h2,ms2,0) <- PobjVarAsgnInst(p,v,u), PP(q,p), path(q,h1,ms1,h2,ms2,0), !contain(u,ms2), !contain(v,ms2).
path(p,h1,ms1,h2,ms2,k0) <- PobjVarAsgnInst(p,v,u), PP(q,p), path(q,h1,ms1,h2,ms2,k0), !contain(u,ms2), !contain(v,ms2), K_index[k0] = 0.
//path(p,h1,ms1,h2,ms2,0) <- PobjVarAsgnInst(p,v,u), PP(q,p), path(q,h1,ms1,h2,ms2,0), contain(u,ms2), deny(v).
path(p,h1,ms1,h2,ms2,k0) <- PobjVarAsgnInst(p,v,u), PP(q,p), path(q,h1,ms1,h2,ms2,k0), contain(u,ms2), deny(v), K_index[k0] = 0.
//path(p,h1,ms1,h2,ms3,0) <- PobjVarAsgnInst(p,v,u), PP(q,p), path(q,h1,ms1,h2,ms2,0), contain(u,ms2), allow(v), gen(ms2,v,ms3).
path(p,h1,ms1,h2,ms3,k0) <- PobjVarAsgnInst(p,v,u), PP(q,p), path(q,h1,ms1,h2,ms2,k0), contain(u,ms2), allow(v), gen(ms2,v,ms3), K_index[k0] = 0.

// ### v = null
//path(p,h1,ms1,h2,ms3,0) <- PobjNullAsgnInst(p,v), PP(q,p), path(q,h1,ms1,h2,ms2,0), contain(v,ms2), kill(ms2,v,ms3).
path(p,h1,ms1,h2,ms3,k0) <- PobjNullAsgnInst(p,v), PP(q,p), path(q,h1,ms1,h2,ms2,k0), contain(v,ms2), kill(ms2,v,ms3), K_index[k0] = 0.
//path(p,h1,ms1,h2,ms2,0) <- PobjNullAsgnInst(p,v), PP(q,p), path(q,h1,ms1,h2,ms2,0), !contain(v,ms2).
path(p,h1,ms1,h2,ms2,k0) <- PobjNullAsgnInst(p,v), PP(q,p), path(q,h1,ms1,h2,ms2,k0), !contain(v,ms2), K_index[k0] = 0.

// ### v = u.f
//path(p,h1,ms1,h2,ms3,0) <- PgetInstFldInst(p,v,_,_), PP(q,p), path(q,h1,ms1,h2,ms2,0), contain(v,ms2), kill(ms2,v,ms3).
path(p,h1,ms1,h2,ms3,k0) <- PgetInstFldInst(p,v,_,_), PP(q,p), path(q,h1,ms1,h2,ms2,k0), contain(v,ms2), kill(ms2,v,ms3), K_index[k0] = 0.
//path(p,h1,ms1,h2,ms2,0) <- PgetInstFldInst(p,v,_,_), PP(q,p), path(q,h1,ms1,h2,ms2,0), !contain(v,ms2).
path(p,h1,ms1,h2,ms2,k0) <- PgetInstFldInst(p,v,_,_), PP(q,p), path(q,h1,ms1,h2,ms2,k0), !contain(v,ms2), K_index[k0] = 0.

// ### v = f
//path(p,h1,ms1,h2,ms3,0) <- PgetStatFldInst(p,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,0), contain(v,ms2), kill(ms2,v,ms3).
path(p,h1,ms1,h2,ms3,k0) <- PgetStatFldInst(p,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,k0), contain(v,ms2), kill(ms2,v,ms3), K_index[k0] = 0.
//path(p,h1,ms1,h2,ms2,0) <- PgetStatFldInst(p,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,0), !contain(v,ms2).
path(p,h1,ms1,h2,ms2,k0) <- PgetStatFldInst(p,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,k0), !contain(v,ms2), K_index[k0] = 0.

// ### Method Call
pathArgInit(q,ms1,h1) <- PInvkInst(p,m,_,_,z), MZfirst(m,z), PP(q,p), path(q,_,_,h1,ms1,_).
//pathArg(q,z,m,ms2,ms3) <- PInvkInst(p,m,v,u,z), PP(q,p), MZfirst(m,z), path(q,_,_,_,ms2,_), contain(u,ms2), 
//									allow(v), gen(0,v,ms3).
pathArg(q,z,m,ms2,ms3) <- PInvkInst(p,m,v,u,z), PP(q,p), MZfirst(m,z), path(q,_,_,_,ms2,_), contain(u,ms2), 
									allow(v), gen(ms0,v,ms3), MS_index[ms0] = 0.
//pathArg(q,z,m,ms2,0) <- PInvkInst(p,m,v,u,z), PP(q,p), MZfirst(m,z), path(q,_,_,_,ms2,_), contain(u,ms2), deny(v).
pathArg(q,z,m,ms2,ms0) <- PInvkInst(p,m,v,u,z), PP(q,p), MZfirst(m,z), path(q,_,_,_,ms2,_), contain(u,ms2), deny(v), MS_index[ms0] = 0.
//pathArg(q,z,m,ms2,0) <- PInvkInst(p,m,_,u,z), PP(q,p), MZfirst(m,z), path(q,_,_,_,ms2,_), !contain(u,ms2).
pathArg(q,z,m,ms2,ms0) <- PInvkInst(p,m,_,u,z), PP(q,p), MZfirst(m,z), path(q,_,_,_,ms2,_), !contain(u,ms2), MS_index[ms0] = 0.

pathArg(q,z2,m,ms2,ms4) <- PInvkInst(p,m,v,u,z2), PP(q,p), MZZ(m,z1,z2), pathArg(q,z1,m,ms2,ms3), 
								 	 contain(u,ms2), allow(v), gen(ms3,v,ms4).
pathArg(q,z2,m,ms2,ms3) <- PInvkInst(p,m,v,u,z2), PP(q,p), MZZ(m,z1,z2), pathArg(q,z1,m,ms2,ms3), 
								 	 contain(u,ms2), deny(v).
pathArg(q,z2,m,ms2,ms3) <- PInvkInst(p,m,_,u,z2), PP(q,p), MZZ(m,z1,z2), pathArg(q,z1,m,ms2,ms3), 
								 	 !contain(u,ms2).

pathArgLast(q,m,ms1,ms2) <- pathArg(q,z,m,ms1,ms2), MZlast(m,z).

//path(p,h1,ms2,h2,ms3,0) <- pathArgLast(q,m,ms1,ms2), pathArgInit(q,ms1,h1), MPhead(m,p), ms2=ms3, h1=h2.
path(p,h1,ms2,h2,ms3,k0) <- pathArgLast(q,m,ms1,ms2), pathArgInit(q,ms1,h1), MPhead(m,p), ms2=ms3, h1=h2, K_index[k0] = 0.


// # To handle corner case of static method with no reference parameters
pathArgInit(q,ms1,h1) <- PI(p,i), IM(i,m), PP(q,p), MK(m,k), k=0, path(q,_,_,h1,ms1,_).
//pathArgLast(q,m,ms1,0) <- PI(p,i), IM(i,m), PP(q,p), MK(m,k), k=0, path(q,_,_,_,ms1,_).
pathArgLast(q,m,ms1,ms0) <- PI(p,i), IM(i,m), PP(q,p), MK(m,k), k=0, path(q,_,_,_,ms1,_), MS_index[ms0] = 0.
// #path(p,h1,0,h2,0,0,0) :- PI(p,i), IM(i,m), PP(q,p), MK(m,k), k=0, path(q,_,_,h1,_,_), MPhead(m,p), h1=h2.

// # To handle corner case of invoke instruction with no target method
//path(p,h1,ms2,h2,ms3,0) <- PInvkSkip(p), PP(q,p), path(q,h1,ms2,h2,ms3,0).
path(p,h1,ms2,h2,ms3,k0) <- PInvkSkip(p), PP(q,p), path(q,h1,ms2,h2,ms3,k0), K_index[k0] = 0.

// #Applying Summary Edge
//path(p,h1,ms1,h3,ms5,0) <- PInvkRetInst(p,m,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,0), pathArgLast(q,m,ms2,ms3),  
//							 summary(m,h2,ms3,h3,0), contain(v,ms2), kill(ms2,v,ms5).
//path(p,h1,ms1,h3,ms2,0) <- PInvkRetInst(p,m,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,0), pathArgLast(q,m,ms2,ms3), 
//							 summary(m,h2,ms3,h3,0), !contain(v,ms2).
//path(p,h1,ms1,h3,ms5,0) <- PInvkRetInst(p,m,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,0), pathArgLast(q,m,ms2,ms3), 
//							 summary(m,h2,ms3,h3,1), allow(v), gen(ms2,v,ms5).
//path(p,h1,ms1,h3,ms2,0) <- PInvkRetInst(p,m,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,0), pathArgLast(q,m,ms2,ms3), 
//							 summary(m,h2,ms3,h3,1), deny(v).
path(p,h1,ms1,h3,ms5,k0) <- PInvkRetInst(p,m,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,k0), pathArgLast(q,m,ms2,ms3), K_index[k0] = 0, 
							 summary(m,h2,ms3,h3,k0), contain(v,ms2), kill(ms2,v,ms5).
path(p,h1,ms1,h3,ms2,k0) <- PInvkRetInst(p,m,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,k0), pathArgLast(q,m,ms2,ms3), K_index[k0] = 0, 
							 summary(m,h2,ms3,h3,k0), !contain(v,ms2).
path(p,h1,ms1,h3,ms5,k0) <- PInvkRetInst(p,m,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,k0), pathArgLast(q,m,ms2,ms3), K_index[k0] = 0, 
							 summary(m,h2,ms3,h3,k1), allow(v), gen(ms2,v,ms5), K_index[k1] = 1.
path(p,h1,ms1,h3,ms2,k0) <- PInvkRetInst(p,m,v,_), PP(q,p), path(q,h1,ms1,h2,ms2,k0), pathArgLast(q,m,ms2,ms3), K_index[k0] = 0, 
							 summary(m,h2,ms3,h3,k1), deny(v), K_index[k1] = 1.

// # To handle corner case of invoke instruction with no return value or with no var capturing the returned value;
// # such instructions are not captured by PInvkRetInst
//path(p,h1,ms1,h3,ms2,0) <- PI(p,i), IM(i,m), PInvkRetInstNotFilter(p,m), PP(q,p), path(q,h1,ms1,h2,ms2,0), pathArgLast(q,m,ms2,ms3), 
//							 summary(m,h2,ms3,h3,_).
path(p,h1,ms1,h3,ms2,k0) <- PI(p,i), IM(i,m), PInvkRetInstNotFilter(p,m), PP(q,p), path(q,h1,ms1,h2,ms2,k0), pathArgLast(q,m,ms2,ms3), K_index[k0] = 0, 
							 summary(m,h2,ms3,h3,_).

// ### Method Return
//path(p,h1,ms1,h2,ms2,1) <- PobjRetInst(p,v), PP(q,p), path(q,h1,ms1,h2,ms2,0), contain(v,ms2).
path(p,h1,ms1,h2,ms2,k1) <- PobjRetInst(p,v), PP(q,p), path(q,h1,ms1,h2,ms2,k0), contain(v,ms2), K_index[k0] = 0, K_index[k1] = 1.
//path(p,h1,ms1,h2,ms2,0) <- PobjRetInst(p,v), PP(q,p), path(q,h1,ms1,h2,ms2,0), !contain(v,ms2).
path(p,h1,ms1,h2,ms2,k0) <- PobjRetInst(p,v), PP(q,p), path(q,h1,ms1,h2,ms2,k0), !contain(v,ms2), K_index[k0] = 0.
// #path(p,h1,ms1,h2,ms2,r,k) :- path(q,h1,ms1,h2,ms2,r,k), PP(q,p), MPtail(m,p). #Handled by nonRelevantP
summary(m,h1,ms1,h2,k) <- MPtail(m,p), path(p,h1,ms1,h2,_,k).

// ### All remaining instructions
relevantP(p) <- PobjValAsgnInst(p,_,_).
relevantP(p) <- PobjVarAsgnInst(p,_,_).
relevantP(p) <- PobjNullAsgnInst(p,_).
relevantP(p) <- PgetInstFldInst(p,_,_,_).
relevantP(p) <- PgetStatFldInst(p,_,_).
relevantP(p) <- PI(p,_).
relevantP(p) <- PobjRetInst(p,_).
relevantP(p) <- MPhead(_,p).

// #nonRelevantP(p) :- PP(_,p), !PobjValAsgnInst(p,_,_), !PobjVarAsgnInst(p,_,_), !PobjNullAsgnInst(p,_), !PgetInstFldInst(p,_,_,_), \
// #				   !PgetStatFldInst(p,_,_), !PI(p,_), !PobjRetInst(p,_).
nonRelevantP(p) <- PP(_,p), !relevantP(p).
path(p,h1,ms1,h2,ms2,k) <- nonRelevantP(p), PP(q,p), path(q,h1,ms1,h2,ms2,k).


// ### Query
//unprovenQuery(q,h) <- PI(q,i), virtIM(i,_), PP(p,q), path(p,_,_,h,ms,_), IinvkArg(i,0,v), VH(v,h), !contain(v,ms), !checkExcludedI(i).
unprovenQuery(q,h) <- PI(q,i), virtIM(i,_), PP(p,q), path(p,_,_,h,ms,_), IinvkArg(i,z0,v), VH(v,h), !contain(v,ms), !checkExcludedI(i), Z_index[z0] = 0.
// #unprovenQuery(q,h) :- PI(q,i), specIM(i,_), PP(p,q), path(p,_,_,h,ms,_), IinvkArg(i,0,v), VH(v,h), !contain(v,ms), !checkExcludedI(i).
