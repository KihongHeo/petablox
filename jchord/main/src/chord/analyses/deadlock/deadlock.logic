// Created by convert.py from ./src/chord/analyses/deadlock/deadlock.dlog on 2015-04-20 13:08:42.236709
// # Copyright (c) 2008-2010, Intel Corporation.
// # Copyright (c) 2006-2007, The Trustees of Stanford University.
// # All rights reserved.
// # Licensed under the terms of the New BSD License.

// # Author: Mayur Naik (mhn@cs.stanford.edu)
// :name: deadlock-dlog

// :domains: A
// :domains: L
// :domains: M
// :domains: H


// ###
// # Relations
// ###

// :inputs: escLH(L,H)
// :inputs: mhpTLTL(A,L,A,L)
// :inputs: syncTLL(A,L,L)
// :inputs: guarded(A,A,L,L)
// convert.py: following intermediate relation converted to output relation
// :outputs: escLL(L,L)
escLL(l1,l2) -> L(l1), L(l2).

// convert.py: following intermediate relation converted to output relation
// :outputs: deadlock1(L,L,L,L)
deadlock1(l1,l2,l3,l4) -> L(l1), L(l2), L(l3), L(l4).
// convert.py: following intermediate relation converted to output relation
// :outputs: deadlock2(A,L,L,A,L,L)
deadlock2(t1,l1,l2,t2,l3,l4) -> A(t1), L(l1), L(l2), A(t2), L(l3), L(l4).
// convert.py: following intermediate relation converted to output relation
// :outputs: deadlock3(A,L,L,A,L,L)
deadlock3(t1,l1,l2,t2,l3,l4) -> A(t1), L(l1), L(l2), A(t2), L(l3), L(l4).
// convert.py: following intermediate relation converted to output relation
// :outputs: deadlock4(A,L,L,A,L,L)
deadlock4(t1,l1,l2,t2,l3,l4) -> A(t1), L(l1), L(l2), A(t2), L(l3), L(l4).
// :outputs: deadlock (A,L,L,A,L,L)
deadlock (t1,l1,l2,t2,l3,l4) -> A(t1), L(l1), L(l2), A(t2), L(l3), L(l4).

// ###
// # Constraints
// ###

escLL(l1,l2) <- escLH(l1,o), escLH(l2,o).

deadlock1(l1,l2,l3,l4) <- escLL(l1,l4), escLL(l2,l3).

deadlock2(t1,l1,l2,t2,l3,l4) <- deadlock1(l1,l2,l3,l4), syncTLL(t1,l1,l2), syncTLL(t2,l3,l4).

deadlock3(t1,l1,l2,t2,l3,l4) <- deadlock2(t1,l1,l2,t2,l3,l4), mhpTLTL(t2,l4,t1,l2).

deadlock4(t1,l1,l2,t2,l3,l4) <- deadlock3(t1,l1,l2,t2,l3,l4), !guarded(t1,t2,l1,l3).

deadlock(t1,l1,l2,t2,l3,l4) <- deadlock4(t1,l1,l2,t2,l3,l4), t1<t2.
deadlock(t1,l1,l2,t2,l3,l4) <- deadlock4(t1,l1,l2,t2,l3,l4), t1=t2, l1<l3.
deadlock(t1,l1,l2,t2,l3,l4) <- deadlock4(t1,l1,l2,t2,l3,l4), t1=t2, l1=l3, l2<=l4.

