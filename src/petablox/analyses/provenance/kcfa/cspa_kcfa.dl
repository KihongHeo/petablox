

// name=pro-cspa-kcfa-dlog

.number_type F
.number_type H
.number_type I
.number_type M
.number_type T
.number_type V
.number_type Z
.number_type C



.decl HT(h:H,t:T) //H0,T1
.input HT()
.decl cha(n:M,t:T,m:M) //M1,T1,M0
.input cha()
.decl sub(t1:T,t2:T) //T1,T0
.input sub()
.decl MI(m:M,i:I) //M,I
.input MI()
.decl statIM(i:I,m:M) //I,M
.input statIM()
.decl specIM(i:I,m:M) //I,M
.input specIM()
.decl virtIM(i:I,m:M) //I,M
.input virtIM()

.decl MobjValAsgnInst(m:M,l:V,h:H) //M,V,H
.input MobjValAsgnInst()
.decl MobjVarAsgnInst(m:M,l:V,r:V) //M,V,V
.input MobjVarAsgnInst()
.decl MgetInstFldInst(m:M,l:V,b:V,f:F) //M,V,V,F
.input MgetInstFldInst()
.decl MputInstFldInst(m:M,b:V,f:F,r:V) //M,V,F,V
.input MputInstFldInst()
.decl MgetStatFldInst(m:M,l:V,f:F) //M,V,F
.input MgetStatFldInst()
.decl MputStatFldInst(m:M,f:F,r:V) //M,F,V
.input MputStatFldInst()

.decl clsForNameIT(i:I,t:T) //I0,T0
.input clsForNameIT()
.decl objNewInstIH(i:I,h:H) //I0,H0
.input objNewInstIH()
.decl objNewInstIM(i:I,m:M) //I0,M0
.input objNewInstIM()
.decl conNewInstIH(i:I,h:H) //I0,H0
.input conNewInstIH()
.decl conNewInstIM(i:I,m:M) //I0,M0
.input conNewInstIM()
.decl aryNewInstIH(i:I,h:H) //I0,H0
.input aryNewInstIH()

.decl RobjValAsgnInst(c:C,l:V,h:H) //C,V,H
.output RobjValAsgnInst()
.decl RobjVarAsgnInst(c:C,l:V,r:V) //C,V,V
.output RobjVarAsgnInst()
.decl RgetInstFldInst(c:C,l:V,b:V,f:F) //C,V,V,F
.output RgetInstFldInst()
.decl RputInstFldInst(c:C,b:V,f:F,r:V) //C,V,F,V
.output RputInstFldInst()
.decl RgetStatFldInst(c:C,l:V,f:F) //C,V,F
.output RgetStatFldInst()
.decl RputStatFldInst(c:C,f:F,r:V) //C,F,V
.output RputStatFldInst()

.decl classT(t:T) //T
.input classT()
.decl staticTM(t:T,m:M) //T,M
.input staticTM()
.decl staticTF(t:T,f:F) //T,F
.input staticTF()
.decl clinitTM(t:T,m:M) //T,M
.input clinitTM()
.decl MmethArg(m:M,n:Z,v:V) //M0,Z0,V0
.input MmethArg()
.decl IinvkArg(i:I,n:Z,v:V) //I0,Z0,V1
.input IinvkArg()
.decl IinvkArg0(i:I,v:V) //I0,V1
.input IinvkArg0()
.decl IinvkRet(i:I,n:Z,v:V) //I0,Z0,V0
.input IinvkRet()
.decl argCopy(i:I,u:V,m:M,v:V) //I0,V1,M0,V0
.input argCopy()
.decl retCopy(i:I,u:V,m:M,v:V) //I0,V0,M0,V1
.input retCopy()
.decl VCfilter(v:V,c:C) //V,C
.input VCfilter()

CH(c:C,h:H) input # c = [h ...]
epsilonM(m:M) input # treat method m context insensitively
kcfaSenM(m:M) input # treat method m context sensitively

IHM(i:I,h:H,m:M) output # at call site i, if h is the allocation site of "this" argument, can get to method m
.decl reachableT(t:T) //T
.output reachableT()

.decl kcfaDIC(c:C,i:I,c:C) //C,I,C
.output kcfaDIC()
DIC(c:C,i:I,c:C) output # in context c, at call site i, c can be the "this" argument
.decl DIH(c:C,i:I,h:H) //C,I,H
.output DIH()
.decl DI(c:C,i:I) //C,I
.output DI()

DVDV(c:C0,u:V0,d:C1,v:V1) output # u in context c can point to same stuff as v in context d

.decl ctxtInsIHM(i:I,h:H,m:M) //I,H,M
.output ctxtInsIHM()
.decl kcfaSenIHM(i:I,h:H,m:M) //I,H,M
.output kcfaSenIHM()

.decl ctxtInsSpecIM(i:I,m:M) //I,M
.output ctxtInsSpecIM()
.decl kcfaSenSpecIM(i:I,m:M) //I,M
.output kcfaSenSpecIM()

.decl ctxtInsStatIM(i:I,m:M) //I,M
.output ctxtInsStatIM()
.decl kcfaSenStatIM(i:I,m:M) //I,M
.output kcfaSenStatIM()

.decl reachableCI(c:C,i:I) //C,I
.output reachableCI()
.decl reachableCM(c:C,m:M) //C,M
.output reachableCM()

.decl rootCM(c:C,m:M) //C,M
.output rootCM()
CICM(c:C,i:I,d:C,m:M) output # in context c, call site i can call method m in context d
CMCM(c:C,m:M,d:C,n:M) output # true if exists some i in m

CVC(c1:C,v:V,c2:C) output # in context c1, variable v can point to abstract object c2

FC(f:F,c:C) output # static field can point to abstract object c2
CFC(c1:C,f:F,c2:C) output # abstract object c1 can point to abstract object c2 via field f

CIC(c:C,i:I,d:C) input # d = [i, c]
CHC(c:C,h:H,d:C) input # d = [h, c]




IHM(i,h,m2) :- virtIM(i,m1), HT(h,t), cha(m1,t,m2).
ctxtInsIHM(i,h,m) :- IHM(i,h,m), epsilonM(m).
kcfaSenIHM(i,h,m) :- IHM(i,h,m), kcfaSenM(m).

kcfaSenSpecIM(i,m) :- specIM(i,m), kcfaSenM(m).
ctxtInsSpecIM(i,m) :- specIM(i,m), epsilonM(m).

kcfaSenStatIM(i,m) :- statIM(i,m), kcfaSenM(m).
ctxtInsStatIM(i,m) :- statIM(i,m), epsilonM(m).


reachableCM(0,0).
reachableCM(0,m) :- clinitTM(t,m), reachableT(t).
reachableCM(c,m) :- CICM(_,_,c,m).
reachableCI(c,i) :- MI(m,i), reachableCM(c,m).


DIC(c,i,o) :- IinvkArg0(i,v), CVC(c,v,o).
DIH(c,i,h) :- DIC(c,i,o), CH(o,h).
DI(c,i) :- DIH(c,i,_).

kcfaDIC(0,i,d) :- CIC(0,i,d), MI(m,i), epsilonM(m).
kcfaDIC(c,i,d) :- CIC(c,i,d), MI(m,i), kcfaSenM(m).


CICM(c,i,0,m) :- reachableCI(c,i), ctxtInsIHM(i,h,m), DIH(c,i,h).
CICM(c,i,d,m) :- reachableCI(c,i), kcfaSenIHM(i,h,m), DIH(c,i,h), kcfaDIC(c,i,d).

CICM(c,i,0,m) :- reachableCI(c,i), ctxtInsSpecIM(i,m), DI(c,i).
CICM(c,i,d,m) :- reachableCI(c,i), kcfaSenSpecIM(i,m), DI(c,i), kcfaDIC(c,i,d).

CICM(c,i,0,m) :- reachableCI(c,i), ctxtInsStatIM(i,m).
CICM(c,i,d,m) :- reachableCI(c,i), kcfaSenStatIM(i,m), kcfaDIC(c,i,d).


DVDV(d,v,c,u) :- argCopy(i,u,m,v), CICM(c,i,d,m).
DVDV(c,u,d,v) :- retCopy(i,u,m,v), CICM(c,i,d,m).

CVC(c,u,o) :- DVDV(c,u,d,v), CVC(d,v,o), VCfilter(u,o).


RobjValAsgnInst(c,l,h) :- reachableCM(c,m), MobjValAsgnInst(m,l,h).
CVC(c,l,o) :- RobjValAsgnInst(c,l,h), CHC(c,h,o).


RobjVarAsgnInst(c,l,r) :- reachableCM(c,m), MobjVarAsgnInst(m,l,r).
CVC(c,l,c1) :- RobjVarAsgnInst(c,l,r), CVC(c,r,c1), VCfilter(l,c1).


RgetInstFldInst(c,l,b,f) :- reachableCM(c,m), MgetInstFldInst(m,l,b,f).
CVC(c,l,c2) :- RgetInstFldInst(c,l,b,f), CVC(c,b,c1), CFC(c1,f,c2). split


RgetStatFldInst(c,l,f) :- reachableCM(c,m), MgetStatFldInst(m,l,f).
CVC(c,l,o) :- RgetStatFldInst(c,l,f), FC(f,o).


RputInstFldInst(c,b,f,r) :- reachableCM(c,m), MputInstFldInst(m,b,f,r).
CFC(c1,f,c2) :- RputInstFldInst(c,b,f,r), CVC(c,b,c1), CVC(c,r,c2). split


RputStatFldInst(c,f,r) :- reachableCM(c,m), MputStatFldInst(m,f,r).
FC(f,o) :- RputStatFldInst(c,f,r), CVC(c,r,o).


reachableCM(c,m) :- reachableCI(c,i), objNewInstIM(i,m).
reachableCM(c,m) :- reachableCI(c,i), conNewInstIM(i,m).

CVC(c,v,o)  :- reachableCI(c,i), objNewInstIM(i,m), MmethArg(m,0,v), objNewInstIH(i,h), CHC(c,h,o).
CVC(c,v,o)  :- reachableCI(c,i), objNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).
CVC(c,v,o2) :- reachableCI(c,i), conNewInstIM(i,m), IinvkArg(i,1,u), MmethArg(m,1,v), CVC(c,u,o), CFC(o,0,o2).
CVC(c,v,o)  :- reachableCI(c,i), conNewInstIM(i,m), MmethArg(m,0,v), conNewInstIH(i,h), CHC(c,h,o).
CVC(c,v,o)  :- reachableCI(c,i), conNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).
CVC(c,v,o)  :- reachableCI(c,i), aryNewInstIH(i,h), IinvkRet(i,0,v), CHC(c,h,o).


reachableT(t) :- reachableCI(_,i), conNewInstIH(i,h), HT(h,t).
reachableT(t) :- reachableCI(_,i), objNewInstIH(i,h), HT(h,t).
reachableT(t) :- reachableCI(_,i), clsForNameIT(i,t).

reachableT(t) :- reachableCM(_,m), MobjValAsgnInst(m,_,h), HT(h,t).
reachableT(t) :- reachableCM(_,m), staticTM(t,m).
reachableT(t) :- reachableCM(_,m), MputStatFldInst(m,f,_), staticTF(t,f).
reachableT(t) :- reachableCM(_,m), MgetStatFldInst(m,_,f), staticTF(t,f).
reachableT(t) :- classT(t), reachableT(s), sub(s,t).

rootCM(0,0).
rootCM(0,m) :- reachableT(t), clinitTM(t,m).
CMCM(c,m,d,n) :- CICM(c,i,d,n), MI(m,i).
