
// name=kobj-init-dlog

.number_type I
.number_type M
.number_type K
.number_type C
.number_type H
.number_type V



.decl initCHC(c:C, h:H, c:C) //C,H,C
.input initCHC()
truncCKC(c:C, k:K, c:C) input 	# K is the domain of integers
HK(h:H, k:K) input				#the parametric relation
.decl roots(m:M) //M
.input roots()
.decl IM(i:I, m:M) //I,M
.input IM()
.decl VH(v:V, h:H) //V,H
.input VH()
.decl MI(m:M, i:I) //M,I
.input MI()
.decl MH(m:M, h:H) //M,H
.input MH()
.decl IinvkArg0(i:I,v:V) //I0,V1
.input IinvkArg0()
.decl statM(m:M) //M
.input statM()

.decl thisMV(m:M, v:V) //M,V
.input thisMV()
.decl HM(h:H, m:M) //H,M
.decl CM_1(c:C, m:M) //C,M
.decl CHC_1(c:C, h:H, c:C) //C,H,C
.decl CHC_2(c:C, h:H, c:C) //C,H,C
.decl CHC_3(c:C, h:H, c:C) //C,H,C

.decl CM(c:C, m:M) //C,M
.output CM()
.decl CHC(c:C, h:H, c:C) //C,H,C
.output CHC()


HM(h,m) :- thisMV(m,v), VH(v,h).

CM_1(0,m) :- roots(m).
CM_1(c,m) :- CHC_1(_,h,c), HM(h,m).
CM_1(c,m1) :- CM_1(c,m0), IM(i,m1), statM(m1), MI(m0,i).

CHC_1(c1,h,c3) :- MH(m,h), CM_1(c1,m), HK(h,k), initCHC(c1,h,c2), truncCKC(c2,k,c3).
CHC_2(c1,h,c2) :- CHC_1(c1,h,c2), initCHC(c1,h,c2).
CHC_3(c1,h,c3) :- !CHC_2(c1,h,c3), CHC_1(c1,h,c3).

CM(0,m) :- roots(m).
CM(c,m) :- CHC(_,h,c), HM(h,m).
CM(c,m1) :- CM(c,m0), IM(i,m1), statM(m1), MI(m0,i).

CHC(c1,h,c3) :- CHC_2(c1,h,c3).
CHC(c1,h,c3) :- MH(m,h), CM(c1,m), HK(h,k), initCHC(c1,h,c2), truncCKC(c2,k,c3), CHC_3(c1,h,c3).
