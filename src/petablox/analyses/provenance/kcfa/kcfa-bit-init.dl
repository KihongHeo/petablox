

.number_type I
.number_type M
.number_type K
.number_type C
.number_type H



.decl initCIC(c:C, i:I, c:C)
.input initCIC()
.decl initCHC(c:C, h:H, c:C)
.input initCHC()
truncCKC(c:C, k:K, c:C) input 	# K is the domain of integers the parametric relation
.decl IM(i:I, m:M)
.input IM()
.decl MI(m:M, i:I)
.input MI()
.decl MH(m:M, h:H)
.input MH()
.decl CL(c:C, k:K)
.input CL()
.decl AllowI(i:I, k:K)
.input AllowI()
.decl DenyI(i:I, k:K)
.input DenyI()
.decl AllowH(h:H, k:K)
.input AllowH()
.decl DenyH(h:H, k:K)
.input DenyH()
.decl roots(m:M)
.input roots()

.decl CIC_1(c:C, i:I, c:C)
.decl CIC_2(c:C, i:I, c:C)

.decl CHC_1(c:C, h:H, c:C)
.decl CHC_2(c:C, h:H, c:C)

.decl CM(c:C, m:M)
.output CM()
.decl CIC(c:C, i:I, c:C)
.output CIC()
.decl CHC(c:C, h:H, c:C)
.output CHC()


CM(0,m) :- roots(m).
CM(c,m) :- CIC(_,i,c), IM(i,m).

AllowI(_,0).
AllowH(_,0).
AllowH(_,1).

CIC_1(c1,i,c2) :- MI(m,i),CM(c1,m),initCIC(c1,i,c2).
CIC(c1,i,c2) :- CIC_1(c1,i,c2),CL(c2,l),AllowI(i,l).

CIC_2(c1,i,c3) :- CIC_1(c1,i,c2), CL(c2,l1), DenyI(i,l2), truncCKC(c2,l2,c3), l2 <= l1.
CIC(c1,i,c2) :- CIC_2(c1,i,c2), CL(c2,l), AllowI(i,l).

CHC_1(c1,h,c2) :- MH(m,h), CM(c1,m), initCHC(c1,h,c2).
CHC(c1,h,c2) :- CHC_1(c1,h,c2),CL(c2,l),AllowH(h,l).

CHC_2(c1,h,c3) :- CHC_1(c1,h,c2), CL(c2,l1), DenyH(h,l2), truncCKC(c2,l2,c3), l2 <= l1.
CHC(c1,h,c2) :- CHC_2(c1,h,c2), CL(c2,l), AllowH(h,l).